# Example values for production environment
# Copy and modify this file according to your needs

# Production-ready configuration
replicaCount: 2

image:
  repository: ghcr.io/paperless-ngx/paperless-ngx
  tag: "2.12.1"
  pullPolicy: IfNotPresent

# Resource configuration for production
resources:
  requests:
    cpu: 1000m
    memory: 2Gi
  limits:
    cpu: 2000m
    memory: 4Gi

# Enable autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70

# Paperless-ngx configuration
paperless:
  admin:
    username: admin
    email: admin@company.com
    # Set a secure password or use existingSecret
    password: ""
    # Use existing secret for admin password
    # existingSecret: paperless-admin-secret
    # existingSecretPasswordKey: password

  config:
    timezone: "Europe/Berlin"
    allowedHosts: "paperless.company.com"
    corsAllowedHosts: "https://paperless.company.com"
    ocrLanguages: "deu+eng"
    taskWorkers: 2
    threadsPerWorker: 2
    
    # Email configuration for notifications
    email:
      enabled: true
      host: "smtp.company.com"
      port: 587
      hostUser: "paperless@company.com"
      hostPassword: "smtp-password"
      useTls: true
      useSSL: false
      from: "paperless@company.com"

  # Persistent storage configuration
  persistence:
    enabled: true
    storageClass: "fast-ssd"  # Use your preferred storage class
    size: 100Gi
    mediaSize: 500Gi
    accessMode: ReadWriteOnce

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "secure-postgres-password"
    username: "paperless"
    password: "secure-paperless-db-password"
    database: "paperless"
  primary:
    persistence:
      enabled: true
      size: 50Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1000m
        memory: 2Gi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "secure-redis-password"
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 512Mi

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
  hosts:
    - host: paperless.company.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: paperless-tls
      hosts:
        - paperless.company.com

# Security configuration
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Node selection for production
nodeSelector:
  node-type: "production"

# Tolerations for dedicated nodes
tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "paperless"
    effect: "NoSchedule"

# Affinity rules for high availability
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - paperless-ngx
        topologyKey: kubernetes.io/hostname